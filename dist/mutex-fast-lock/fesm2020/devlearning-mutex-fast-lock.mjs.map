{"version":3,"file":"devlearning-mutex-fast-lock.mjs","sources":["../../../projects/mutex-fast-lock/src/lib/models/mutex-fast-lock-config.ts","../../../projects/mutex-fast-lock/src/lib/models/mutex-lock-stats.ts","../../../projects/mutex-fast-lock/src/lib/mutex-fast-lock-config.injector.ts","../../../projects/mutex-fast-lock/src/lib/models/lock-item.ts","../../../projects/mutex-fast-lock/src/lib/mutex-fast-lock.service.ts","../../../projects/mutex-fast-lock/src/lib/mutex-fast-lock.module.ts","../../../projects/mutex-fast-lock/src/public-api.ts","../../../projects/mutex-fast-lock/src/devlearning-mutex-fast-lock.ts"],"sourcesContent":["export class MutexFastLockConfig{\n  lockPrefix: string;\n  timeout: number;\n  debugEnabled: boolean;\n}","export class MutexLockStats {\n  restartCount: number;\n  locksLost: number;\n  contentionCount: number;\n  acquireDuration: number;\n  acquireStart: number;\n  acquireEnd: number;\n  lockStart: number;\n  lockEnd: number;\n  lockDuration: number;\n}","import { InjectionToken } from '@angular/core';\nimport { MutexFastLockConfig } from './models/mutex-fast-lock-config';\n\nexport const MUTEX_FAST_LOCK_CONFIG = new InjectionToken<MutexFastLockConfig>('MUTEX_FAST_LOCK_CONFIG');","export class LockItem{\n  clientId: string;\n  expiresAt: number;\n}","import { Inject, Injectable } from '@angular/core';\nimport { MUTEX_FAST_LOCK_CONFIG } from './mutex-fast-lock-config.injector';\nimport { MutexFastLockConfig } from './models/mutex-fast-lock-config';\nimport { MutexLockStats } from './models/mutex-lock-stats';\nimport { Observable, Subscriber } from 'rxjs';\nimport { LockItem } from './models/lock-item';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MutexFastLockService {\n\n  private _clientId: string;\n  private _xPrefix: string;\n  private _yPrefix: string;\n\n  constructor(\n    @Inject(MUTEX_FAST_LOCK_CONFIG) private readonly _config: MutexFastLockConfig,\n  ) {\n    this._clientId = this._generateRandomId();\n    this._xPrefix = _config.lockPrefix + '_X_';\n    this._yPrefix = _config.lockPrefix + '_Y_';\n\n    let that = this;\n    window.addEventListener(\"beforeunload\", function (ev) {\n      var arr = [];\n\n      for (var i = 0; i < localStorage.length; i++) {\n        if (localStorage.key(i).indexOf(that._xPrefix) == 0\n          || localStorage.key(i).indexOf(that._yPrefix) == 0) {\n          arr.push(localStorage.key(i));\n        }\n      }\n\n      for (var i = 0; i < arr.length; i++) {\n        localStorage.removeItem(arr[i]);\n      }\n    });\n  }\n\n  public lock(key: string, timeout: number = -1) {\n    let that = this;\n\n    if (timeout == -1) timeout = this._config.timeout;\n\n    let xLock = that._xPrefix + key;\n    let yLock = that._yPrefix + key;\n\n    let lockStats: MutexLockStats = new MutexLockStats();\n\n    that.resetStats(lockStats);\n\n    this._config.debugEnabled ?? console.debug('Attempting to acquire Lock on \"%s\" using FastMutex instance \"%s\"', key, this._clientId);\n\n    lockStats.acquireStart = new Date().getTime();\n\n    //return new Promise(function (resolve, reject) {\n    return new Observable<MutexLockStats>(subscriber => {\n      // we need to differentiate between API calls to lock() and our internal\n      // recursive calls so that we can timeout based on the original lock() and\n      // not each subsequent call.  Therefore, create a new function here within\n      // the promise closure that we use for subsequent calls:\n      let acquireLock = function acquireLock(key) {\n\n        that._releaseExpiredLock(xLock);\n        that._releaseExpiredLock(yLock);\n\n        var elapsedTime = new Date().getTime() - lockStats.acquireStart;\n        if (elapsedTime >= timeout) {\n          that._config.debugEnabled ?? console.debug('Lock on \"%s\" could not be acquired within %sms by FastMutex client \"%s\"', key, timeout, that._clientId);\n          subscriber.error(new Error('Lock could not be acquired within ' + timeout + 'ms'));\n        }\n\n        that._setItem(xLock, that._clientId, timeout);\n\n        // if y exists, another client is getting a lock, so retry in a bit\n        var lsY = that._getItem(yLock, timeout);\n        if (lsY) {\n          that._config.debugEnabled ?? console.debug('Lock exists on Y (%s), restarting...', lsY);\n          lockStats.restartCount++;\n          setTimeout(function () {\n            return acquireLock(key);\n          }, 10);\n          return;\n        }\n\n        // ask for inner lock\n        that._setItem(yLock, that._clientId, timeout);\n\n        // if x was changed, another client is contending for an inner lock\n        var lsX = that._getItem(xLock, timeout);\n        if (lsX !== that._clientId) {\n          lockStats.contentionCount++;\n          that._config.debugEnabled ?? console.debug('Lock contention detected. X=\"%s\"', lsX);\n\n          // Give enough time for critical section:\n          setTimeout(function () {\n            lsY = that._getItem(yLock, timeout);\n            if (lsY === that._clientId) {\n              // we have a lock\n              that._config.debugEnabled ?? console.debug('FastMutex client \"%s\" won the lock contention on \"%s\"', that._clientId, key);\n              that.resolveWithStats(subscriber, lockStats);\n            } else {\n              // we lost the lock, restart the process again\n              lockStats.restartCount++;\n              lockStats.locksLost++;\n              that._config.debugEnabled ?? console.debug('FastMutex client \"%s\" lost the lock contention on \"%s\" to another process (%s). Restarting...', that._clientId, key, lsY);\n              setTimeout(function () {\n                return acquireLock(key);\n              }, 10);\n            }\n          }, 100);\n\n          return;\n        }\n\n        // no contention:\n        that._config.debugEnabled ?? console.debug('FastMutex client \"%s\" acquired a lock on \"%s\" with no contention', that._clientId, key);\n        that.resolveWithStats(subscriber, lockStats);\n      };\n\n      acquireLock(key);\n\n    });\n  }\n\n  public release(key) {\n    this._config.debugEnabled ?? console.debug('FastMutex client \"%s\" is releasing lock on \"%s\"', this._clientId, key);\n\n    let x = this._xPrefix + key;\n    let y = this._yPrefix + key;\n    localStorage.removeItem(x);\n    localStorage.removeItem(y);\n\n    //that.lockStats.lockEnd = new Date().getTime();\n    //that.lockStats.lockDuration = that.lockStats.lockEnd - that.lockStats.lockStart;\n\n    //let retStats = angular.copy(that.lockStats);\n\n    //that.resetStats();\n\n    //return retStats;\n  }\n\n  private _generateRandomId() {\n    return Math.floor(Math.random() * 10000000000) + '';\n  }\n\n  private resetStats(lockStats: MutexLockStats) {\n    lockStats.restartCount = 0;\n    lockStats.locksLost = 0;\n    lockStats.contentionCount = 0;\n    lockStats.acquireDuration = 0;\n    lockStats.acquireStart = null;\n  }\n\n  private resolveWithStats(subscriber: Subscriber<MutexLockStats>, stats: MutexLockStats) {\n    var currentTime = new Date().getTime();\n    stats.acquireEnd = currentTime;\n    stats.acquireDuration = stats.acquireEnd - stats.acquireStart;\n    stats.lockStart = currentTime;\n    subscriber.next(stats);\n    subscriber.complete();\n  }\n\n  /**\n   * Helper function to wrap all values in an object that includes the time (so\n   * that we can expire it in the future) and json.stringify's it\n   */\n  private _setItem(key, clientId, timeout) {\n    let lockItem = new LockItem();\n    lockItem.clientId = clientId;\n    lockItem.expiresAt = new Date().getTime() + timeout;\n    return localStorage.setItem(key, JSON.stringify(lockItem));\n  }\n\n  /**\n   * Helper function to parse JSON encoded values set in localStorage\n   */\n  private _getItem(key, timeout) {\n    var item = localStorage.getItem(key);\n\n    if (!item) return null;\n\n    var lockItem = <LockItem>JSON.parse(item);\n    if (new Date().getTime() - lockItem.expiresAt >= timeout) {\n      this._config.debugEnabled ?? console.debug('FastMutex client \"%s\" removed an expired record on \"%s\"', this._clientId, key);\n      localStorage.removeItem(key);\n      return null;\n    }\n\n    return lockItem.clientId;\n  }\n\n  private _releaseExpiredLock(key: string){\n    var item = localStorage.getItem(key);\n\n    if (!item) return null;\n\n    var lockItem = <LockItem>JSON.parse(item);\n\n    if (lockItem.expiresAt <= new Date().getTime()) {\n      this._config.debugEnabled ?? console.debug('FastMutex auto removed an expired record on \"%s\"', key);\n      localStorage.removeItem(key);\n    }\n  }\n}\n","import { ModuleWithProviders, NgModule } from \"@angular/core\";\nimport { MutexFastLockConfig } from \"./models/mutex-fast-lock-config\";\nimport { MUTEX_FAST_LOCK_CONFIG } from \"./mutex-fast-lock-config.injector\";\n\n@NgModule()\nexport class MutexFastLockModule {\n  static forRoot(config: MutexFastLockConfig): ModuleWithProviders<MutexFastLockModule> {\n\n    return ({\n      ngModule: MutexFastLockModule,\n      providers: [\n        { provide: MUTEX_FAST_LOCK_CONFIG, useValue: config },\n      ]\n    });\n\n  }\n}\n","/*\n * Public API Surface of cnet-mutex-fast-lock\n */\n\nexport * from './lib/models/mutex-fast-lock-config';\nexport * from './lib/models/mutex-lock-stats';\nexport * from './lib/mutex-fast-lock.service';\nexport * from './lib/mutex-fast-lock.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}